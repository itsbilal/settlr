
angular.module("results", [])
  .config(function($interpolateProvider) {
    $interpolateProvider.startSymbol('{[');
    $interpolateProvider.endSymbol(']}');
  })
  .directive("ayyLmaoMap", function(){
    return {
      link: function(scope, element, attrs) {
        require(["esri/map", "esri/geometry/Polygon", "esri/graphic", "esri/geometry/Point", "dojo/domReady!"], function(Map, Polygon, Graphic, Point) {

          var map;
          if (scope.workLat && scope.workLon) {
            map = new Map("map", {
              basemap: "topo",  //For full list of pre-defined basemaps, navigate to http://arcg.is/1JVo6Wd
              center: [scope.workLon, scope.workLat], // longitude, latitude
              zoom: 12
            });
          } else {
            map = new Map("map", {
              basemap: "topo",  //For full list of pre-defined basemaps, navigate to http://arcg.is/1JVo6Wd
              center: [-79.4, 43.7], // longitude, latitude
              zoom: 12
            });
          }



          // scope.$watch(scope.hoods, function(){
          var reloadMap = function(){
            map.graphics.clear();
            var maxScore = _.max(scope.hoods, function(hood){return hood.score}).score;
            var graphics = scope.hoods.map(function(hood) {
              var polygonJson = {
                geometry: {
                  rings: hood.geometry.rings,
                  spatialReference: {"wkid":102100,"latestWkid":3857}
                },
                "symbol": {
                  "color":(scope.selectedHood === hood.nid ? [73,191,255,104] : [0,0,Math.floor(255.0*(hood.score/maxScore)),Math.floor(128.0*(hood.score/maxScore))]),
                  "outline":{
                    "color":[0,0,0,255],
                    "width":1,
                    "type":"esriSLS",
                    "style":"esriSLSSolid"
                  },
                  "type":"esriSFS","style":"esriSFSSolid"
                }
              };

              return new Graphic(polygonJson);
            });

            graphics.forEach(function(graphic){
              map.graphics.add(graphic);
            });
          };

          map.on("load", reloadMap);
          scope.$watch("selectedHood", reloadMap);
          
          // }, true);
        });
      }
    }
  })
  .controller("MapView", function($scope, $http){
    // Test data for now
    //$scope.hoods = [{ "_id" : 1, "geometry" : { "rings" : [ [ [ -8820687, 5427358 ], [ -8820729, 5427320 ], [ -8820760, 5427243 ], [ -8820688, 5427174 ], [ -8820692, 5427158 ], [ -8820733, 5427152 ], [ -8820763, 5427078 ], [ -8820737, 5427018 ], [ -8820796, 5426795 ], [ -8820792, 5426677 ], [ -8820809, 5426660 ], [ -8820867, 5426661 ], [ -8820908, 5426605 ], [ -8820922, 5426511 ], [ -8820964, 5426405 ], [ -8820981, 5426211 ], [ -8821126, 5426091 ], [ -8821158, 5426087 ], [ -8821230, 5426117 ], [ -8821294, 5426105 ], [ -8821345, 5426122 ], [ -8821409, 5426117 ], [ -8821432, 5426167 ], [ -8821469, 5426184 ], [ -8821630, 5426161 ], [ -8821721, 5426106 ], [ -8821799, 5426001 ], [ -8821852, 5426023 ], [ -8821912, 5425992 ], [ -8822063, 5425797 ], [ -8822181, 5425756 ], [ -8822141, 5425628 ], [ -8822223, 5425606 ], [ -8822583, 5425557 ], [ -8822684, 5425573 ], [ -8822709, 5425637 ], [ -8822737, 5425655 ], [ -8822928, 5425619 ], [ -8823051, 5425671 ], [ -8823213, 5425709 ], [ -8823346, 5425686 ], [ -8823376, 5425777 ], [ -8823924, 5425609 ], [ -8824105, 5426194 ], [ -8823629, 5426617 ], [ -8823819, 5427374 ], [ -8824391, 5429404 ], [ -8824458, 5429784 ], [ -8824828, 5431041 ], [ -8824191, 5431229 ], [ -8822624, 5431648 ], [ -8822278, 5430480 ], [ -8822155, 5429926 ], [ -8821584, 5427894 ], [ -8821560, 5427690 ], [ -8821316, 5427760 ], [ -8821291, 5427705 ], [ -8821235, 5427720 ], [ -8821061, 5427640 ], [ -8820969, 5427623 ], [ -8820921, 5427574 ], [ -8820767, 5427477 ], [ -8820736, 5427375 ], [ -8820715, 5427353 ], [ -8820687, 5427358 ] ] ] }, "title" : "Bendale", "nid" : 127, "scores" : [ { "category" : "crime", "value" : 546, "_id" : 1 }, { "category" : "walkscore", "value" : 54, "_id" : 1 }, { "category" : "density", "value" : 3766.216216, "_id" : 1 }, { "category" : "green_spaces", "value" : 0.023378571, "delta" : -0.0000781861, "_id" : 1 }, { "category" : "pollutants", "value" : 575, "_id" : 1 } ], "__v" : 4, "centroid" : { "x" : 43.76036560110046, "y" : -79.25740506027141 } },
//{ "_id" : 1, "geometry" : { "rings" : [ [ [ -8825861, 5416179 ], [ -8826250, 5417484 ], [ -8825406, 5417744 ], [ -8824998,  5417918 ], [ -8824793, 5418041 ], [ -8824583, 5418197 ], [ -8824306, 5418464 ], [ -8824120, 5418706 ], [ -8823933, 5419026 ], [ -8822546, 5421919 ], [ -8822214, 5422023 ], [ -8821710, 5420317 ], [ -8821785, 5420236 ], [ -8821791, 5420160 ], [ -8821743, 5420055 ], [ -8821706, 5419886 ], [ -8821671, 5419850 ], [ -8821575, 5419816 ], [ -8821550, 5419786 ], [ -8821445, 5419435 ], [ -8821406, 5419186 ], [ -8821607, 5419037 ], [ -8821872, 5418891 ], [ -8821887, 5418869 ], [ -8821869, 5418832 ], [ -8821902, 5418876 ], [ -8821935, 5418865 ], [ -8821984, 5418819 ], [ -8821969, 5418782 ], [ -8821999, 5418821 ], [ -8822059, 5418786 ], [ -8822078, 5418763 ], [ -8822063, 5418724 ], [ -8822091, 5418748 ], [ -8822255, 5418632 ], [ -8822420, 5418567 ], [ -8822453, 5418519 ], [ -8822441, 5418483 ], [ -8822478, 5418513 ], [ -8822715, 5418352 ], [ -8822773, 5418244 ], [ -8822764, 5418225 ], [ -8822799, 5418248 ], [ -8822832, 5418229 ], [ -8822866, 5418154 ], [ -8822854, 5418118 ], [ -8822898, 5418145 ], [ -8822940, 5418116 ], [ -8822974, 5418038 ], [ -8822948, 5418001 ], [ -8822984, 5418018 ], [ -8823010, 5418008 ], [ -8823049, 5417927 ], [ -8823052, 5417899 ], [ -8823024, 5417874 ], [ -8823071, 5417892 ], [ -8823107, 5417849 ], [ -8823118, 5417789 ], [ -8823079, 5417762 ], [ -8823139, 5417780 ], [ -8823175, 5417719 ], [ -8823179, 5417685 ], [ -8823145, 5417656 ], [ -8823190, 5417671 ], [ -8823203, 5417660 ], [ -8823241, 5417568 ], [ -8823227, 5417551 ], [ -8823273, 5417567 ], [ -8823589, 5417094 ], [ -8823755, 5416933 ], [ -8823893, 5416764 ], [ -8823913, 5416760 ], [ -8823951, 5416658 ], [ -8823943, 5416643 ], [ -8823974, 5416660 ], [ -8823993, 5416652 ], [ -8824032, 5416561 ], [ -8824021, 5416542 ], [ -8824060, 5416557 ], [ -8824100, 5416463 ], [ -8824095, 5416439 ], [ -8824117, 5416448 ], [ -8824188, 5416378 ], [ -8824271, 5416185 ], [ -8824263, 5416170 ], [ -8824302, 5416188 ], [ -8824327, 5416169 ], [ -8824376, 5416031 ], [ -8824369, 5416014 ], [ -8824427, 5416038 ], [ -8824452, 5416014 ], [ -8824510, 5415845 ], [ -8824496, 5415824 ], [ -8824553, 5415858 ], [ -8824594, 5415830 ], [ -8824662, 5415654 ], [ -8824669, 5415624 ], [ -8824648, 5415602 ], [ -8824682, 5415621 ], [ -8824706, 5415611 ], [ -8824768, 5415484 ], [ -8824745, 5415450 ], [ -8824795, 5415472 ], [ -8824829, 5415431 ], [ -8824863, 5415335 ], [ -8824836, 5415298 ], [ -8824887, 5415321 ], [ -8824919, 5415294 ], [ -8824956, 5415187 ], [ -8824929, 5415145 ], [ -8824981, 5415162 ], [ -8825017, 5415139 ], [ -8825063, 5415016 ], [ -8825114, 5414956 ], [ -8825149, 5414844 ], [ -8825137, 5414813 ], [ -8825191, 5414849 ], [ -8825227, 5414851 ], [ -8825379, 5414679 ], [ -8825414, 5414693 ], [ -8825423, 5414724 ], [ -8825411, 5414727 ], [ -8825527, 5415115 ], [ -8825542, 5415110 ], [ -8825861, 5416179 ] ] ] }, "title" : "Birchcliffe-Cliffside", "nid" : 122, "scores" : [ { "category" : "crime", "value" : 411, "_id" : 1 }, { "category" : "walkscore", "value" : 60, "_id" : 1 }, { "category" : "density", "value" : 3643.333333, "_id" : 1 }, { "category" : "green_spaces", "value" : 0.014631675, "delta" : 0.000123341, "_id" : 1 }, { "category" : "pollutants", "value" : 446, "_id" : 1 } ], "__v" : 4, "centroid" : { "x" : 43.69467675380666, "y" : -79.26509681049961 } }];
    hoods = JSON.parse(window.hoods);
    $scope.workLat = hoods.workLat;
    $scope.workLon = hoods.workLon;
    hoods = hoods.hoods; // single best line of code ever
    hoods.sort(function(a,b){return b.score - a.score});
    $scope.hoods = hoods; // the spirit of "why not" here at UW
    $scope.selectedHood = null;
  });
